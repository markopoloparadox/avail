name: Releaser Binaries and WASM
on:
  push:
    branches-ignore:
      - '**'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
      
      - name: install podman
        run: sudo apt-get update && sudo apt install podman -y

      - uses: nick-fields/retry@v3
        with:
          timeout_seconds: 5
          max_attempts: 3
          command: ENGINE=podman SCRIPT_LOC=./scripts/workflows/releaser_wasm.sh ./scripts/workflows/run.sh

      - uses: actions/upload-artifact@v2
        with:
          name: da_runtime.compact.compressed.wasm
          path: output/da_runtime.compact.compressed.wasm

  # compile all binaries from previous jobs into single release
  binary_publish:
    needs: [wasm]
    runs-on: ubuntu-latest
    steps:
      - name: Create Artifact Directory
        run: mkdir ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-ubuntu-2004-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-ubuntu-2204-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-ubuntu-2310-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-fedora-39-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-fedora-39-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-debian-11-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-debian-12-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: x86_64-arch-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: arm64-ubuntu-2004-avail-node.tar.gz
          path: ./artifact

      - uses: actions/download-artifact@v3
        with:
          name: da_runtime.compact.compressed.wasm
          path: ./artifact

      - name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF#refs/tags/}
            echo "tag_name=${TAG}" >> $GITHUB_OUTPUT

      - name: publish binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          release_name: ${{ steps.prepare.outputs.tag_name }}
          tag: ${{ steps.prepare.outputs.tag_name }}
          overwrite: true
          file_glob: true
